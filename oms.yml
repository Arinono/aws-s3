oms: 1
lifecycle:
  startup:
    command:
      - node
      - /app/dist/index.js
info:
  version: 0.0.1
  title: aws-s3
  description: 'AWS S3 SDK as microservice'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  contact:
    name: 'Aurelien ARINO'
    url: 'git@github.com:Arinono/aws-s3.git'
    email: aurelien@storyscript.io
health:
  http:
    path: /health
    port: 5000
actions:
  upload:
    arguments:
      file:
        required: true
        in: requestBody
        type: any
      options:
        required: false
        in: requestBody
        type: map
      bucket:
        required: true
        in: requestBody
        type: string
      key:
        required: true
        in: requestBody
        type: string
    http:
      port: 5000
      method: post
      path: /upload
      contentType: multipart/form-data
    help: 'https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#upload-property'
    output:
      type: any
  deleteObject:
    arguments:
      bucket:
        required: true
        in: requestBody
        type: string
      key:
        required: true
        in: requestBody
        type: string
    http:
      port: 5000
      method: delete
      path: /deleteObject
      contentType: application/json
    help: 'https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#deleteObject-property'
    output:
      type: any
  copyObject:
    arguments:
      bucket:
        required: true
        in: requestBody
        type: string
      key:
        required: true
        in: requestBody
        type: string
      copySource:
        required: true
        in: requestBody
        type: string
    http:
      port: 5000
      method: post
      path: /copyObject
      contentType: application/json
    help: 'https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#copyObject-property'
    output:
      type: any
  createBucket:
    arguments:
      bucket:
        required: true
        in: requestBody
        type: string
      locationConstraint:
        required: false
        in: requestBody
        type: string
    http:
      port: 5000
      method: post
      path: /createBucket
      contentType: application/json
    help: 'https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#createBucket-property'
    output:
      type: any
  deleteBucket:
    arguments:
      bucket:
        required: true
        in: requestBody
        type: string
    http:
      port: 5000
      method: delete
      path: /deleteBucket
      contentType: application/json
    help: 'https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#deleteBucket-property'
    output:
      type: any
  deleteObjects:
    arguments:
      bucket:
        required: true
        in: requestBody
        type: string
      objects:
        required: true
        in: requestBody
        type: map
    http:
      port: 5000
      method: delete
      path: /deleteObjects
      contentType: application/json
    help: 'https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#deleteObject-property'
    output:
      type: any
environment:
  AWS_ACCESS_KEY_ID:
    type: string
    required: true
  AWS_SECRET_ACCESS_KEY:
    type: string
    required: true
